(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{692:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"mysql8-0配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql8-0配置"}},[s._v("#")]),s._v(" MySQL8.0配置")]),s._v(" "),a("h3",{attrs:{id:"pom-xml的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml的配置"}},[s._v("#")]),s._v(" "),a("code",[s._v("pom.xml")]),s._v("的配置")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("mysql"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("mysql-connector-java"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("8/0.12"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"jdbc驱动类的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdbc驱动类的配置"}},[s._v("#")]),s._v(" jdbc驱动类的配置")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.mysql.cj.jdbc.Driver\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"数据库时区的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库时区的配置"}},[s._v("#")]),s._v(" 数据库时区的配置")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统设置的时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%time_zone%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" GLOBALE time_zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+8:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 东八区要加8小时")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"mysql索引-b树和b-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引-b树和b-树"}},[s._v("#")]),s._v(" MySQL索引-B树和B+树")]),s._v(" "),a("h3",{attrs:{id:"b树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b树"}},[s._v("#")]),s._v(" B树")]),s._v(" "),a("p",[s._v("B树是一种多路平衡查找树，B是平衡的意思，即"),a("code",[s._v("Balance")]),s._v("，"),a("code",[s._v("m")]),s._v("阶(m >= 2)的B树有以下特征：")]),s._v(" "),a("ol",[a("li",[s._v("树中的每个节点最多有m个子节点")]),s._v(" "),a("li",[s._v("除了根节点和叶子节点之外，其他每个节点至少有"),a("code",[s._v("m/2")]),s._v("个子节点")]),s._v(" "),a("li",[s._v("所有的叶子节点都在同一层")]),s._v(" "),a("li",[s._v("节点中关键字的顺序按照升序排列")])]),s._v(" "),a("h3",{attrs:{id:"b-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-树"}},[s._v("#")]),s._v(" B+树")]),s._v(" "),a("p",[s._v("B+树是B树的一个变体，同样是多路平衡查找树，它与B树主要的不同是")]),s._v(" "),a("ol",[a("li",[s._v("非叶子节点不存储数据，只存储索引")]),s._v(" "),a("li",[s._v("叶子节点包含了全部的关键字信息，且叶子节点按照关键字顺序相互连接")])]),s._v(" "),a("h2",{attrs:{id:"mysql索引-聚簇索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引-聚簇索引"}},[s._v("#")]),s._v(" MySQL索引-聚簇索引")]),s._v(" "),a("blockquote",[a("p",[s._v("每个"),a("code",[s._v("InnoDB")]),s._v("的表都拥有一个索引 ，称之为"),a("code",[s._v("聚簇索引")]),s._v("，此索引中存储着"),a("code",[s._v("行记录")]),s._v("，一般来说，聚簇索引是根据"),a("code",[s._v("主键")]),s._v("生成的。")])]),s._v(" "),a("p",[a("strong",[s._v("聚簇索引的创建规则")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("条件")]),s._v(" "),a("th",[s._v("规则")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("显示的定义了主键")]),s._v(" "),a("td",[s._v("InnoDB会利用主键来生成其聚簇索引")])]),s._v(" "),a("tr",[a("td",[s._v("没有定义主键")]),s._v(" "),a("td",[s._v("InnoDB会选择一个非空的唯一索引来创建聚簇索引")])]),s._v(" "),a("tr",[a("td",[s._v("没有定义主键且所有列都不满足主键的条件")]),s._v(" "),a("td",[s._v("InnoDB会隐式的创建一个自增的列来作为聚簇索引")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("ul",[a("li",[s._v("对于选择唯一索引的顺序是按照定义唯一索引的顺序，而非表中列的顺序")]),s._v(" "),a("li",[s._v("选中的唯一索引字段会充当为主键，或者InnoDB隐式创建的自增列也可以看做主键")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);