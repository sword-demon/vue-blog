(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{603:function(t,a,r){"use strict";r.r(a);var s=r(4),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"分布式基础理论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式基础理论"}},[t._v("#")]),t._v(" 分布式基础理论")]),t._v(" "),r("blockquote",[r("p",[t._v("分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。")]),t._v(" "),r("p",[t._v("“分布式系统(distrubuted system)是建立在网络之上的软件系统”")]),t._v(" "),r("p",[t._v("随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，正需一个治理系统确保架构有条不紊的演进。")])]),t._v(" "),r("h2",{attrs:{id:"发展演变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#发展演变"}},[t._v("#")]),t._v(" 发展演变")]),t._v(" "),r("h3",{attrs:{id:"单一应用架构-orm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单一应用架构-orm"}},[t._v("#")]),t._v(" 单一应用架构(ORM)")]),t._v(" "),r("blockquote",[r("p",[t._v("当网站浏览很小时，只需要一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。")])]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://gitee.com/wxvirus/img/raw/master/img/20220103224445.png",alt:"单体架构"}})]),t._v(" "),r("h3",{attrs:{id:"垂直应用架构-mvc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垂直应用架构-mvc"}},[t._v("#")]),t._v(" 垂直应用架构(MVC)")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://gitee.com/wxvirus/img/raw/master/img/20220103224744.png",alt:"垂直应用架构"}})]),t._v(" "),r("blockquote",[r("p",[t._v("这样分工很容易，每个人负责开发其对应部分的应用即可，这样就互不干扰；性能扩展也很容易，如果用户的应用访问比较多，就可以把用户单应用多放几台服务器。")])]),t._v(" "),r("p",[t._v("缺点：")]),t._v(" "),r("ol",[r("li",[t._v("界面 + 业务逻辑的没有实现分离")]),t._v(" "),r("li",[t._v("垂直业务也会越来越多，不可能完全理想化的应用和应用之间独立，大量的应用之间需要交互")])]),t._v(" "),r("h3",{attrs:{id:"分布式的架构-rpc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式的架构-rpc"}},[t._v("#")]),t._v(" 分布式的架构(RPC)")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://gitee.com/wxvirus/img/raw/master/img/20220103225310.png",alt:"分布式服务架构"}})]),t._v(" "),r("blockquote",[r("p",[t._v("RPC: 远程过程调用")])]),t._v(" "),r("p",[t._v("分布式服务架构最大的难点就是各个节点之间的调用和通信，就会使用到"),r("code",[t._v("RPC")]),t._v("，即远程过程调用，而好的分布式服务框架就能极大的简化我们的开发。")]),t._v(" "),r("p",[t._v("缺点：会出现某一个服务，调度上资源利用率问题。")]),t._v(" "),r("h3",{attrs:{id:"流动计算架构-soa"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#流动计算架构-soa"}},[t._v("#")]),t._v(" 流动计算架构(SOA)")]),t._v(" "),r("blockquote",[r("p",[t._v("通过调度、治理中心来基于访问压力实时管理集群容量，提高集群利用率。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);