(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{656:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"日志级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志级别"}},[t._v("#")]),t._v(" 日志级别")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/golang/glog",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/golang/glog"),s("OutboundLink")],1),t._v("，是"),s("code",[t._v("google")]),t._v("提供的一个不维护的日志库，"),s("code",[t._v("glog")]),t._v("有其他语言的一些版本，它包含以下日志级别：")]),t._v(" "),s("ul",[s("li",[t._v("Info")]),t._v(" "),s("li",[t._v("Warning")]),t._v(" "),s("li",[t._v("Error")]),t._v(" "),s("li",[t._v("Fatal(会中断程序执行)")])]),t._v(" "),s("p",[t._v("还有类似的"),s("code",[t._v("log4go，logo,zap")]),t._v("等其他第三方日志库，他们还提供了设置日志级别的可见性，一般提供日志级别：")]),t._v(" "),s("ul",[s("li",[t._v("Trace")]),t._v(" "),s("li",[t._v("Debug")]),t._v(" "),s("li",[t._v("Info")]),t._v(" "),s("li",[t._v("Warning")]),t._v(" "),s("li",[t._v("Error")]),t._v(" "),s("li",[t._v("Critical")])]),t._v(" "),s("h3",{attrs:{id:"warning"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#warning"}},[t._v("#")]),t._v(" Warning")]),t._v(" "),s("p",[t._v("基本没人看警告，因为从定义上讲，没有什么出错。也许将来会有问题，但这听起来像是别人的问题。我们尽可能的消除警告级别，它要么是一条信息性消息，要么是一个错误。参考"),s("code",[t._v("Go")]),t._v("语言设计哲学，所有警告都是错误，其他语言的"),s("code",[t._v("warning")]),t._v("都可以忽略，除非IDE或者在"),s("code",[t._v("CICD")]),t._v("流程中强制他们为"),s("code",[t._v("error")]),t._v("，然后逼着程序员尽可能的去消除 。同样的，如果想要最终消除"),s("code",[t._v("warning")]),t._v("可以记录为"),s("code",[t._v("error")]),t._v("，让代码作者重视起来。")]),t._v(" "),s("p",[t._v("常见的就是"),s("code",[t._v("SpringBoot")]),t._v("运行起来，下面那一大片警告，一般确实没人会去关注。")]),t._v(" "),s("h3",{attrs:{id:"fatal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fatal"}},[t._v("#")]),t._v(" Fatal")]),t._v(" "),s("p",[t._v("记录消息后，会直接调用"),s("code",[t._v("os.Exit(1)")]),t._v("，这意味着：")]),t._v(" "),s("ul",[s("li",[t._v("在其他"),s("code",[t._v("gorouting defer")]),t._v("语句不会被执行")]),t._v(" "),s("li",[t._v("各种"),s("code",[t._v("buffers")]),t._v("不会被"),s("code",[t._v("flush")]),t._v("包括日志的")]),t._v(" "),s("li",[t._v("临时文件或者目录不会被移除")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"title"}),s("p",[t._v("不要使用"),s("code",[t._v("fatal")]),t._v("记录日志，而是向调用者返回错误。如果错误一直持续到"),s("code",[t._v("main.main")]),t._v("，"),s("code",[t._v("main.main")]),t._v("那就是在退出之前做处理任何清理操作的正确位置。")])]),s("h3",{attrs:{id:"error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" Error")]),t._v(" "),s("p",[t._v("也有很多在错误发生的地方要立马记录日志，尤其要使用"),s("code",[t._v("error")]),t._v("级别记录。")]),t._v(" "),s("ul",[s("li",[t._v("处理"),s("code",[t._v("error")])]),t._v(" "),s("li",[t._v("把"),s("code",[t._v("error")]),t._v("抛给调用者，在顶部打印日志")])]),t._v(" "),s("p",[t._v("如果选择通过日志记录来处理错误，那么根据定义，它不再是一个错误，因为你已经处理了它。记录错误的行为会处理错误，因此不再适合将其记录为错误。")]),t._v(" "),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("somethingHard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oops, something was too hard"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" err\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"language-go line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("planA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Infof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"could\'t open the foo file, continuing to use planB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("planB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("这里产生了降级行为，本质属于有损服务 ，更倾向于在这里使用warning，应该要重视为什么planA经常失败")])]),t._v(" "),s("h3",{attrs:{id:"debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[t._v("#")]),t._v(" Debug")]),t._v(" "),s("ul",[s("li",[t._v("开发人员在开发或调试软件时关心的事情")]),t._v(" "),s("li",[t._v("用户在使用软件时关心的事情")])]),t._v(" "),s("p",[t._v("它们分别是调试和信息级别")]),t._v(" "),s("p",[s("code",[t._v("log.Info")]),t._v("只需将该行写入日志输出，不应该有关闭它的选项，因为用户只应该被告知对他们有用的事情。")]),t._v(" "),s("p",[s("code",[t._v("log.Debug")]),t._v("是完全不同的事情，它由开发人员或支持工程师控制。在开发过程中，调试语句应该是丰富的，而不必求助于"),s("code",[t._v("trace")]),t._v("或"),s("code",[t._v("debug2")]),t._v("级别 。日志包应该支持细粒度控制，以启用或禁用调试，并且只在包或更精细的范围内启用或禁用调试语句。")]),t._v(" "),s("p",[t._v("B站是如何设计和思考的："),s("a",{attrs:{href:"https://github.com/go-kratos/kratos/tree/v2.0.x/log",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/go-kratos/kratos/tree/v2.0.x/log"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"日志选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志选型"}},[t._v("#")]),t._v(" 日志选型")]),t._v(" "),s("p",[t._v("一个完整的集中式日志系统，需要包含以下几个主要特征：")]),t._v(" "),s("ul",[s("li",[t._v("收集：能够采集多种来源的日志数据")]),t._v(" "),s("li",[t._v("传输：能够稳定地把日志数据传输到中央系统")]),t._v(" "),s("li",[t._v("存储：如何存储日志数据")]),t._v(" "),s("li",[t._v("分析：可以支持UI分析")]),t._v(" "),s("li",[t._v("警告：能够提供错误报告，监控机制")])]),t._v(" "),s("blockquote",[s("p",[t._v("开源界鼎鼎大名"),s("code",[t._v("ELK stack")]),t._v("，分别表示："),s("code",[t._v("ElasticSearch,Logstash, Kibana")]),t._v("，他们都是开源软件。新增了一个"),s("code",[t._v("FileBeat")]),t._v("，它是一个轻量级的日志收集处理工具("),s("code",[t._v("Agent")]),t._v(")，"),s("code",[t._v("FileBeat")]),t._v("占用资源少，适合于在各个服务器上搜集日志后传输给"),s("code",[t._v("Logstash")]),t._v("，官方也推荐此工具。")])]),t._v(" "),s("h2",{attrs:{id:"设计目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计目标"}},[t._v("#")]),t._v(" 设计目标")]),t._v(" "),s("ul",[s("li",[t._v("接入方式收敛")]),t._v(" "),s("li",[t._v("日志格式规范")]),t._v(" "),s("li",[t._v("日志解析对日志系统透明")]),t._v(" "),s("li",[t._v("系统高吞吐、低延迟")]),t._v(" "),s("li",[t._v("系统高可用、容量可扩展、高可运维性")])]),t._v(" "),s("h3",{attrs:{id:"格式规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#格式规范"}},[t._v("#")]),t._v(" 格式规范")]),t._v(" "),s("p",[t._v("JSON作为日志的输出格式：")]),t._v(" "),s("ul",[s("li",[t._v("time：日志产生时间，"),s("code",[t._v("ISO8601")]),t._v("格式")]),t._v(" "),s("li",[t._v("level：日志等级，ERROR, WARN, INFO,DEBUG")]),t._v(" "),s("li",[t._v("app_id：应用id，用于标识日志来源")]),t._v(" "),s("li",[t._v("instance_id：实例id，用于区分同一应用不同实例，即"),s("code",[t._v("hostname")])])]),t._v(" "),s("p",[s("strong",[t._v("可以使用"),s("code",[t._v("otel")]),t._v("规范")])])])}),[],!1,null,null,null);a.default=r.exports}}]);